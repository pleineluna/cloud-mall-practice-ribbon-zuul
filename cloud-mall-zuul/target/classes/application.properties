server.port=6000

spring.datasource.name=imooc_mall_datasource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/imooc_mall?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false&serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=123456

mybatis.mapper-locations=classpath*:mappers/*.xml

logging.pattern.console=%clr(%d{${LOG_DATEFORMAT_PATTERN:HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}

eureka.client.service-url.defaultZone=http://localhost:8000/eureka/

spring.application.name=cloud-mall-zuul

zuul.prefix=/

zuul.routes.cloud-mall-user.path=/user/**
zuul.routes.cloud-mall-user.service-id=cloud-mall-user

zuul.routes.cloud-mall-category-product.path=/category-product/**
zuul.routes.cloud-mall-category-product.service-id=cloud-mall-category-product

cloud-mall-user.ribbon.NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
#RoundRobinRule：轮询规则
#RandomRule：随机规则
#WeightedResponseTimeRule：使用响应时间的平均或者百分比为每个服务分配权重的规则，如果没法收集响应时间信息，会默认使用轮询规则
#BestAvailableRule：会先根据断路器过滤掉处于故障的服务，然后选择并发量最小的服务
#ZoneAvoidanceRule：根据server所在Zone和其性能，选择服务器，默认规则
#AvailabilityFilteringRule：先根据断路器规则过滤掉有问题的服务，然后对剩余的服务按照轮询的策略进行访问
#RetryRule：先按照RoundRobinRule规则进行服务获取，如果调用服务失败会在指定时间内进行重试，直到获取到可用的服务
cloud-mall-user.ribbon.listOfServers=http://localhost:9000,http://localhost:9001,http://localhost:9002

ribbon.eureka.enabled=false

#网关连接超时时间
zuul.host.connect-timeout-millis=15000
#指定Session存储方案是redis
spring.session.store-type=redis
spring.redis.port=6379
spring.redis.host=192.168.245.128
spring.redis.password=12345
#网关过滤设置为空，代表不过滤
zuul.sensitive-headers=
